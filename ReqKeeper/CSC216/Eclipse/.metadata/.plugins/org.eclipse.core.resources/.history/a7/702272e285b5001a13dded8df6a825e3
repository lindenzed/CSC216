/**
 * 
 */
package edu.ncsu.csc216.pack_scheduler.course.validator;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import org.junit.Test;

/**
 * Tests the state transitions for a Course name.  A valid course name
 * is 1-4 letters followed by 3 numbers, and then an optional suffix.
 * Anything else in invalid.
 * @author Zach Giles
 *
 */
public class CourseNameValidatorFSMTest {

	/**
	 * Test the 1st Letter state
	 */
	@Test
	public void testFirstLetterStateValid() {
		CourseNameValidatorFSM cv = new CourseNameValidatorFSM();
		String courseName = "C";
		try {
			cv.isValid(courseName);
		}
		catch (InvalidTransitionException e) {
			try {
				assertEquals("Course name can only contain letters and digits.", e.getMessage());
				assertTrue(cv.isValid(courseName + "SCA116"));
			}
			catch(InvalidTransitionException ee) {
				fail();
			}
		}
	}
	
	/**
	 * Test the 2nd Letter state
	 */
	@Test
	public void testSecondLetterStateValid() {
		CourseNameValidatorFSM cv = new CourseNameValidatorFSM();
		String courseName = "CS";
		try {
			cv.isValid(courseName);
		}
		catch (InvalidTransitionException e) {
			try {
				assertEquals("Course name can only contain letters and digits.", e.getMessage());
				assertTrue(cv.isValid(courseName + "CA116"));
			}
			catch(InvalidTransitionException ee) {
				fail();
			}
		}
	}
	
	/**
	 * Test the 3rd Letter state
	 */
	@Test
	public void testThirdLetterStateValid() {
		CourseNameValidatorFSM cv = new CourseNameValidatorFSM();
		String courseName = "CSC";
		try {
			cv.isValid(courseName);
		}
		catch (InvalidTransitionException e) {
			try {
				assertTrue(cv.isValid(courseName + "A116"));
			}
			catch(InvalidTransitionException ee) {
				fail();
			}
		}
	}

	/**
	 * Test the 4th Letter state
	 */
	@Test
	public void testFourthLetterStateValid() {
		CourseNameValidatorFSM cv = new CourseNameValidatorFSM();
		String courseName = "CSCA";
		try {
			cv.isValid(courseName);
		}
		catch (InvalidTransitionException e) {
			try {
				assertTrue(cv.isValid(courseName + "116"));
			}
			catch(InvalidTransitionException ee) {
				fail();
			}
		}
	}
	
	/**
	 * Test the 1st Digit
	 */
	@Test
	public void testFirstDigitStateValid() {
		CourseNameValidatorFSM cv = new CourseNameValidatorFSM();
		String courseName = "CSCA1";
		try {
			cv.isValid(courseName);
		}
		catch (InvalidTransitionException e) {
			try {
				assertTrue(cv.isValid(courseName + "16"));
			}
			catch(InvalidTransitionException ee) {
				fail();
			}
		}
	}
	
	/**
	 * Test the 2nd Digit
	 */
	@Test
	public void testSecondDigitStateValid() {
		CourseNameValidatorFSM cv = new CourseNameValidatorFSM();
		String courseName = "CSCA11";
		try {
			cv.isValid(courseName);
		}
		catch (InvalidTransitionException e) {
			try {
				assertTrue(cv.isValid(courseName + "6"));
			}
			catch(InvalidTransitionException ee) {
				fail();
			}
		}
	}
	
	/**
	 * Test the 3rd Digit
	 */
	@Test
	public void testThirdDigitStateValid() {
		CourseNameValidatorFSM cv = new CourseNameValidatorFSM();
		String courseName = "CSCA116";
		try {
			assertTrue(cv.isValid(courseName));
		}
		catch (InvalidTransitionException e) {
			fail();
		}
	}
	
	/**
	 * Test the Suffix
	 */
	@Test
	public void testSuffixStateValid() {
		CourseNameValidatorFSM cv = new CourseNameValidatorFSM();
		String courseName = "CSCA116D";
		try {
			assertTrue(cv.isValid(courseName));
		}
		catch (InvalidTransitionException e) {
			fail();
		}
	}
	
}
