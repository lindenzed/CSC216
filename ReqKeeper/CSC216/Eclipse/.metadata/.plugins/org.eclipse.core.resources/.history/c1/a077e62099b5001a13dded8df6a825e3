/**
 * 
 */
package edu.ncsu.csc216.pack_scheduler.course.validator;

/**
 * Context class for implementing the Validator FSM in the State Pattern
 * @author Zach Giles
 *
 */
public class CourseNameValidator {

	static final int MAX_LETTERS = 4;
	private int letterCount = 0;
	private int digitCount = 0;
	private boolean validEndState = false;
	static final int NEEDED_DIGITS = 3;
	private State currentState;
	private State stateInitial = new InitialState();
	private State stateLetter = new LetterState();
	private State stateNumber = new NumberState();
	private State stateSuffix = new SuffixState();
	public CourseNameValidator() {
		
	}
	
	public boolean isValid(String courseName)  throws InvalidTransitionException {
		return false;
	}
	
	abstract private class State {
		/**Defines what the state should do on a letter input*/
		abstract void onLetter();
		/**Defines what the state should do on a digit input*/
		abstract void onDigit();
		/**Defines what the state should do on non-alphanumeric input*/
		void onOther() throws InvalidTransitionException {
			throw new InvalidTransitionException("Course name can only contain letters and digits.");
		}
	}
	
	private class InitialState extends State {
		@Override
		void onLetter() {
			letterCount++;
			currentState = stateLetter;
		}

		@Override
		void onDigit() {
			onOther();
			
		}
	}
	private class LetterState extends State {
		@Override
		void onLetter() {
			if (letterCount < MAX_LETTERS) {
				letterCount++;
			}
			else {
				throw new InvalidTransitionException("Course name cannot start with more than 4 letters.");
			}
		}

		@Override
		void onDigit() {
			digitCount++;
			currentState = stateNumber;
			
		}
	}
}
